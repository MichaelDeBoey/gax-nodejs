{
  "name": "google-gax",
  "version": "4.5.0",
  "description": "Google API Extensions",
  "main": "./build/esm/src/index.js",
  "type": "module",
  "types": "./build/esm/src/index.d.ts",
  "files": [
    "build/esm",
    "build/cjs",
    "build/protos",
    "!build/cjs/system-test",
    "!build/esm/system-test",
    "!build/cjs/test",
    "!build/esm/test",
    "!build/esm/**/*.map",
    "!build/cjs/**/*.map"
  ],
  "exports": {
    ".": {
      "import": {
        "types": "./build/esm/src/index.d.ts",
        "default": "./build/esm/src/index.js"
      },
      "require": {
        "types": "./build/cjs/src/index.d.ts",
        "default": "./build/cjs/src/index.cjs"
      }
    },
    "./build/src/protobuf": {
      "import": {
        "types": "./build/esm/src/protobuf.d.ts",
        "default": "./build/esm/src/protobuf.js"
      },
      "require": {
        "types": "./build/cjs/src/protobuf.d.ts",
        "default": "./build/cjs/src/protobuf.cjs"
      }
    }
  },
  "dependencies": {
    "@grpc/grpc-js": "^1.10.9",
    "@grpc/proto-loader": "^0.7.13",
    "@types/long": "^4.0.0",
    "abort-controller": "^3.0.0",
    "duplexify": "^4.0.0",
    "google-auth-library": "^9.3.0",
    "node-fetch": "^2.7.0",
    "object-hash": "^3.0.0",
    "proto3-json-serializer": "^2.0.2",
    "protobufjs": "^7.3.2",
    "retry-request": "^7.0.0",
    "uuid": "^9.0.1"
  },
  "devDependencies": {
    "@babel/cli": "^7.25.9",
    "@babel/core": "^7.26.0",
    "@babel/plugin-proposal-private-methods": "^7.18.6",
    "@babel/preset-env": "^7.26.0",
    "@babel/preset-typescript": "^7.26.0",
    "@types/duplexify": "^3.6.4",
    "@types/mocha": "^9.0.0",
    "@types/ncp": "^2.0.1",
    "@types/node": "^20.5.0",
    "@types/node-fetch": "^2.6.11",
    "@types/object-hash": "^3.0.0",
    "@types/proxyquire": "^1.3.28",
    "@types/pumpify": "^1.4.1",
    "@types/sinon": "^17.0.0",
    "@types/uglify-js": "^3.17.0",
    "@types/uuid": "^9.0.7",
    "babel-plugin-replace-import-extension": "^1.1.4",
    "c8": "^9.0.0",
    "cheerio": "1.0.0-rc.12",
    "codecov": "^3.1.0",
    "esmock": "^2.6.9",
    "execa": "^5.0.0",
    "gapic-tools": "^0.4.6",
    "glob": "10.4.5",
    "google-proto-files": "^4.2.0",
    "gts": "^5.0.0",
    "jackspeak": "3.4.3",
    "jsdoc": "^4.0.0",
    "jsdoc-fresh": "^3.0.0",
    "jsdoc-region-tag": "^3.0.0",
    "linkinator": "^4.0.0",
    "long": "^4.0.0",
    "lru-cache": "10.4.3",
    "mkdirp": "^2.0.0",
    "mocha": "^9.0.0",
    "ncp": "^2.0.0",
    "null-loader": "^4.0.0",
    "pdfmake": "0.2.12",
    "protobufjs-cli": "1.1.3",
    "proxyquire": "^2.0.1",
    "pumpify": "^2.0.0",
    "sinon": "^18.0.0",
    "stream-events": "^1.0.4",
    "ts-loader": "^8.0.0",
    "typescript": "^5.1.6",
    "uglify-js": "^3.17.0",
    "walkdir": "^0.4.0",
    "webpack": "^4.0.0",
    "webpack-cli": "^4.0.0"
  },
  "scripts": {
    "docs": "jsdoc -c .jsdoc.js",
    "pretest": "npm run prepare",
    "test:cjs": "mocha build/cjs/test/unit",
    "test:esm": "mocha build/esm/test/unit --loader=esmock --enable-source-maps",
    "test": "npm run test:esm && npm run test:cjs",
    "lint": "gts check esm/src samples esm/test",
    "clean": "rm -rf build",
    "compile": "npm run compile:esm && npm run compile:cjs",
    "compile:esm": "tsc -p ./tsconfig.esm.json && cp esm/src/*.json build/esm/src && cp -r esm/test/fixtures build/esm/test && node replace-things.cjs protos/http.js protos/iam_service.js protos/locations.js protos/operations.js && cp -r protos build",
    "compile:cjs": "tsc -p ./tsconfig.json && npm run babel && node add-cjs-extension.cjs build/cjs/test && cp esm/src/*.json build/cjs/src && cp -r esm/test/fixtures build/cjs/test",
    "compile-operation-protos:cjs": "pbjs -t json google/longrunning/operations.proto -p ./protos > protos/operations.json && pbjs -t static-module -r operations_protos google/longrunning/operations.proto -p ./protos > protos/operations.cjs && pbts protos/operations.cjs -o protos/operations.d.ts",
    "compile-compute-operations-protos:cjs": "pbjs -t json google/longrunning/compute_operations.proto -p ./protos > protos/compute_operations.json && pbjs -t static-module -r compute_operations_protos google/longrunning/compute_operations.proto -p ./protos > protos/compute_operations.cjs && pbts protos/compute_operations.cjs -o protos/compute_operations.d.ts",
    "compile-iam-protos:cjs": "pbjs -t json google/iam/v1/iam_policy.proto google/iam/v1/options.proto google/iam/v1/policy.proto google/iam/v1/logging/audit_data.proto -p ./protos > protos/iam_service.json && pbjs -t static-module -r iam_protos google/iam/v1/iam_policy.proto google/iam/v1/options.proto google/iam/v1/policy.proto google/iam/v1/logging/audit_data.proto -p ./protos > protos/iam_service.cjs && pbts protos/iam_service.cjs -o protos/iam_service.d.ts",
    "compile-location-protos:cjs": "pbjs -t json google/cloud/location/locations.proto -p ./protos > protos/locations.json && pbjs -t static-module -r locations_protos google/cloud/location/locations.proto -p ./protos > protos/locations.cjs && pbts protos/locations.cjs -o protos/locations.d.ts",
    "compile-status-protos:cjs": "pbjs -t json google/rpc/status.proto google/rpc/error_details.proto -p ./protos > protos/status.json",
    "compile-http-protos:cjs": "pbjs -t static-module -r http_proto --keep-case google/api/http.proto -p ./protos > protos/http.cjs && pbts protos/http.cjs -o protos/http.d.ts",
    "compile-operation-protos:esm": "pbjs -t static-module -r operations_protos google/longrunning/operations.proto -p ./protos -w es6 > protos/operations.js && pbts protos/operations.js -w es6 -o protos/operations.d.ts",
    "compile-compute-operations-protos:esm": "pbjs -t json google/longrunning/compute_operations.proto -p ./protos > protos/compute_operations.json && pbjs -t static-module -r compute_operations_protos google/longrunning/compute_operations.proto -w es6 -p ./protos > protos/compute_operations.js && pbts protos/compute_operations.js -w es6 -o protos/compute_operations.d.ts",
    "compile-iam-protos:esm": "pbjs -t static-module -w es6 -r iam_protos google/iam/v1/iam_policy.proto google/iam/v1/options.proto google/iam/v1/policy.proto google/iam/v1/logging/audit_data.proto -p ./protos > protos/iam_service.js && pbts protos/iam_service.js -w es6 -o protos/iam_service.d.ts",
    "compile-location-protos:esm": "pbjs -t static-module -w es6 -r locations_protos google/cloud/location/locations.proto -p ./protos > protos/locations.js && pbts protos/locations.js -w es6 -o protos/locations.d.ts",
    "compile-http-protos:esm": "pbjs -t static-module -r http_proto -w es6 --keep-case google/api/http.proto -p ./protos > protos/http.js && pbts protos/http.js -w es6 -o protos/http.d.ts",
    "fix": "gts fix",
    "prepare": "npm run compile && cd ../tools && npm i && npm run compile && cd ../gax && pwd && node ../tools/build/src/prepublish.js . && mkdirp build/protos && cp -r protos/* build/protos/",
    "system-test:cjs": "mocha build/cjs/test/system-test --timeout 1800000 && npm run test-application",
    "system-test:esm": "mocha build/esm/test/system-test --timeout 1800000 && npm run test-application --experimental-modules",
    "system-test": "npm run system-test:esm && npm run system-test:cjs",
    "samples-test": "cd samples/ && npm link ../ && npm test && cd ../",
    "docs-test": "linkinator docs",
    "predocs-test": "npm run docs",
    "browser-test": "cd esm/test/browser-test && npm run prefetch && npm install && npm test",
    "test-application": "cd test/test-application && npm run prefetch && npm install && npm start",
    "prelint": "cd samples; npm link ../; npm install",
    "precompile": "npm run clean",
    "update-protos": "cd ../tools && npm i && npm run compile && cd ../gax && node ../tools/build/src/listProtos.js .",
    "minify-proto-json": "cd ../tools && npm i && npm run compile && cd ../gax && node ../tools/build/src/minify.js",
    "babel": "babel esm --out-dir build/cjs --ignore \"esm/**/*.d.ts\",\"esm/test/browser-test\",\"esm/test/showcase-echo-client\",\"esm/test/showcase-server\",\"esm/test/test-application\" --extensions \".ts\" --out-file-extension .cjs --copy-files"
  },
  "keywords": [
    "grpc"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/googleapis/gax-nodejs.git",
    "directory": "gax"
  },
  "author": "Google API Authors",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/googleapis/gax-nodejs/issues"
  },
  "homepage": "https://github.com/googleapis/gax-nodejs#readme",
  "engines": {
    "node": ">=18"
  },
  "browser": "build/src/fallback.js"
}
